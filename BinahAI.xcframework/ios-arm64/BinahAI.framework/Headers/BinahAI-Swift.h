#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef BINAHAI_SWIFT_H
#define BINAHAI_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
#endif

#import <BinahAI/BinahAI.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BinahAI",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


SWIFT_CLASS_NAMED("AlertCodes")
@interface BNHAlertCodes : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger deviceLowPowerModeEnabledError;)
+ (NSInteger)deviceLowPowerModeEnabledError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger deviceTorchUnavailableError;)
+ (NSInteger)deviceTorchUnavailableError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger deviceTorchShutDownError;)
+ (NSInteger)deviceTorchShutDownError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger deviceMinimumBatteryLevelError;)
+ (NSInteger)deviceMinimumBatteryLevelError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger deviceClockSkewError;)
+ (NSInteger)deviceClockSkewError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger cameraNoCameraError;)
+ (NSInteger)cameraNoCameraError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger cameraCameraOpenError;)
+ (NSInteger)cameraCameraOpenError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger cameraCameraMissingPermissionsError;)
+ (NSInteger)cameraCameraMissingPermissionsError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger cameraUnexpectedImageDimensionsWarning;)
+ (NSInteger)cameraUnexpectedImageDimensionsWarning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseActivationLimitReachedError;)
+ (NSInteger)licenseActivationLimitReachedError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseMeterAttributeUsesLimitReachedError;)
+ (NSInteger)licenseMeterAttributeUsesLimitReachedError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseAuthenticationFailedError;)
+ (NSInteger)licenseAuthenticationFailedError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseInvalidLicenseKeyError;)
+ (NSInteger)licenseInvalidLicenseKeyError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseNetworkIssuesError;)
+ (NSInteger)licenseNetworkIssuesError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseSslHandshakeError;)
+ (NSInteger)licenseSslHandshakeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseInputLicenseKeyEmptyError;)
+ (NSInteger)licenseInputLicenseKeyEmptyError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseInputProductIdIllegalError;)
+ (NSInteger)licenseInputProductIdIllegalError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseCannotOpenFileForReadError;)
+ (NSInteger)licenseCannotOpenFileForReadError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseMonthlyUsageTrackingRequiresSyncError;)
+ (NSInteger)licenseMonthlyUsageTrackingRequiresSyncError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseSslHandshakeDeviceDateError;)
+ (NSInteger)licenseSslHandshakeDeviceDateError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseSslHandshakeCertificateExpiredError;)
+ (NSInteger)licenseSslHandshakeCertificateExpiredError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseMinSdkError;)
+ (NSInteger)licenseMinSdkError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger licenseNetworkTimeoutError;)
+ (NSInteger)licenseNetworkTimeoutError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementMisdetectionDurationExceedsLimitError;)
+ (NSInteger)measurementMisdetectionDurationExceedsLimitError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementInvalidRecentDetectionRateError;)
+ (NSInteger)measurementInvalidRecentDetectionRateError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementLicenseActivationFailedError;)
+ (NSInteger)measurementLicenseActivationFailedError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementTooManyFramesInorderError;)
+ (NSInteger)measurementTooManyFramesInorderError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementMisdetectionDurationExceedsLimitWarning;)
+ (NSInteger)measurementMisdetectionDurationExceedsLimitWarning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementInvalidRecentFPSRateWarning;)
+ (NSInteger)measurementInvalidRecentFPSRateWarning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger measurementMeasurementMisplacedFrameWarning;)
+ (NSInteger)measurementMeasurementMisplacedFrameWarning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger vitalSignMeasuringWithNoEnabledVitalSignsWarning;)
+ (NSInteger)vitalSignMeasuringWithNoEnabledVitalSignsWarning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger sessionIllegalStartCallError;)
+ (NSInteger)sessionIllegalStartCallError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger sessionIllegalStopCallError;)
+ (NSInteger)sessionIllegalStopCallError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationInvalidProcessingTimeError;)
+ (NSInteger)initializationInvalidProcessingTimeError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationRotationAndOrientationMismatch;)
+ (NSInteger)initializationRotationAndOrientationMismatch SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationInvalidLicenseFormat;)
+ (NSInteger)initializationInvalidLicenseFormat SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationSdkLoadFailure;)
+ (NSInteger)initializationSdkLoadFailure SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationUnsupportedUserWeight;)
+ (NSInteger)initializationUnsupportedUserWeight SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationUnsupportedUserAge;)
+ (NSInteger)initializationUnsupportedUserAge SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger initializationConcurrentSessionsError;)
+ (NSInteger)initializationConcurrentSessionsError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger sensorUnsupportedSensorFirmwareVersion;)
+ (NSInteger)sensorUnsupportedSensorFirmwareVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_PROTOCOL_NAMED("AlertData")
@protocol BNHAlertData
@property (nonatomic, readonly, copy) NSString * _Nonnull domain;
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull additionalInfo;
@end


SWIFT_CLASS("_TtC7BinahAI12AlertDomains")
@interface AlertDomains : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull device;)
+ (NSString * _Nonnull)device SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull camera;)
+ (NSString * _Nonnull)camera SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull license;)
+ (NSString * _Nonnull)license SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull measurement;)
+ (NSString * _Nonnull)measurement SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull vitalSigns;)
+ (NSString * _Nonnull)vitalSigns SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull recorder;)
+ (NSString * _Nonnull)recorder SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull session;)
+ (NSString * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull initialization;)
+ (NSString * _Nonnull)initialization SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull all;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHAlgoType, "AlgoType", open) {
  BNHAlgoTypePpg = 0,
  BNHAlgoTypeRppg = 1,
};



SWIFT_CLASS_NAMED("BloodPressure")
@interface BNHBloodPressure : NSObject
@property (nonatomic, readonly) NSInteger systolic;
@property (nonatomic, readonly) NSInteger diastolic;
- (nonnull instancetype)initWithSystolic:(NSInteger)systolic diastolic:(NSInteger)diastolic OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHConfidenceLevel, "ConfidenceLevel", open) {
  BNHConfidenceLevelUnknown = 0,
  BNHConfidenceLevelLow = 1,
  BNHConfidenceLevelMedium = 2,
  BNHConfidenceLevelHigh = 3,
};

enum BNHCoreMessageType : NSInteger;

SWIFT_CLASS_NAMED("CoreMessage")
@interface BNHCoreMessage : NSObject
@property (nonatomic, readonly) enum BNHCoreMessageType type;
@property (nonatomic, readonly) id _Nonnull value;
- (nonnull instancetype)initWithType:(enum BNHCoreMessageType)type value:(id _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHCoreMessage (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_PROTOCOL_NAMED("CoreMessageDelegate")
@protocol BNHCoreMessageDelegate
- (void)coreMessage:(BNHCoreMessage * _Nonnull)coreMessage;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHCoreMessageType, "CoreMessageType", open) {
  BNHCoreMessageTypePulseRate = 0,
  BNHCoreMessageTypeRespirationRate = 1,
  BNHCoreMessageTypeOxygenSaturation = 2,
  BNHCoreMessageTypeBloodPressure = 3,
  BNHCoreMessageTypeError = 4,
  BNHCoreMessageTypeWarning = 5,
  BNHCoreMessageTypeReset = 6,
  BNHCoreMessageTypeDone = 7,
  BNHCoreMessageTypeSnr = 8,
};

typedef SWIFT_ENUM_NAMED(NSInteger, BNHDeviceOrientation, "DeviceOrientation", open) {
  BNHDeviceOrientationPortrait = 0,
  BNHDeviceOrientationPortraitUpsideDown = 1,
  BNHDeviceOrientationLandscapeLeft = 2,
  BNHDeviceOrientationLandscapeRight = 3,
};


SWIFT_CLASS_NAMED("EnabledVitalSigns")
@interface BNHEnabledVitalSigns : NSObject
@property (nonatomic, readonly) BNHVitalSignType enabledVitalSigns;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEnabledVitalSigns:(BNHVitalSignType)enabledVitalSigns OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithVitalSignsTypes:(NSArray<NSNumber *> * _Nonnull)vitalSignsTypes OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEnabledWithVitalSignType:(BNHVitalSignType)vitalSignType SWIFT_WARN_UNUSED_RESULT;
@end


@interface BNHEnabledVitalSigns (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("ErrorData")
@interface BNHErrorData : NSObject <BNHAlertData>
@property (nonatomic, copy) NSString * _Nonnull domain;
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull additionalInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("FaceAngles")
@interface BNHFaceAngles : NSObject
@property (nonatomic, readonly) float yaw;
@property (nonatomic, readonly) float roll;
@property (nonatomic, readonly) float pitch;
- (nonnull instancetype)initWithYaw:(float)yaw roll:(float)roll pitch:(float)pitch OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHFaceAngles (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

@class BNHLicenseDetails;
@protocol BNHSession;
@protocol BNHSessionInfoListener;
@protocol BNHVitalSignsListener;
@protocol BNHImageListener;

SWIFT_CLASS_NAMED("SessionBuilder")
@interface BNHSessionBuilder : NSObject
- (id <BNHSession> _Nullable)buildWithLicenseDetails:(BNHLicenseDetails * _Nonnull)licenseDetails error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BNHSessionBuilder * _Nonnull)withSessionInfoListener:(id <BNHSessionInfoListener> _Nonnull)listener SWIFT_WARN_UNUSED_RESULT;
- (BNHSessionBuilder * _Nonnull)withVitalSignsListener:(id <BNHVitalSignsListener> _Nonnull)listener SWIFT_WARN_UNUSED_RESULT;
- (BNHSessionBuilder * _Nonnull)withImageListener:(id <BNHImageListener> _Nonnull)listener SWIFT_WARN_UNUSED_RESULT;
- (BNHSessionBuilder * _Nonnull)withOptionsWithOptions:(NSDictionary<NSString *, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BNHSubjectDemographic;
enum BNHImageFormatMode : NSInteger;

SWIFT_CLASS_NAMED("FaceSessionBuilder") SWIFT_AVAILABILITY(ios,introduced=13)
@interface BNHFaceSessionBuilder : BNHSessionBuilder
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (nonnull instancetype)new;
- (BNHFaceSessionBuilder * _Nonnull)withDetectionAlwaysOn:(BOOL)detectionOn SWIFT_WARN_UNUSED_RESULT;
- (BNHFaceSessionBuilder * _Nonnull)withDeviceOrientation:(enum BNHDeviceOrientation)orientation SWIFT_WARN_UNUSED_RESULT;
- (BNHFaceSessionBuilder * _Nonnull)withSubjectDemographic:(BNHSubjectDemographic * _Nonnull)demographic SWIFT_WARN_UNUSED_RESULT;
- (BNHFaceSessionBuilder * _Nonnull)withImageFormatMode:(enum BNHImageFormatMode)imageFormatMode SWIFT_WARN_UNUSED_RESULT;
- (id <BNHSession> _Nullable)buildWithLicenseDetails:(BNHLicenseDetails * _Nonnull)licenseDetails error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("FingerSessionBuilder") SWIFT_AVAILABILITY(ios,introduced=13)
@interface BNHFingerSessionBuilder : BNHSessionBuilder
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (nonnull instancetype)new;
- (id <BNHSession> _Nullable)buildWithLicenseDetails:(BNHLicenseDetails * _Nonnull)licenseDetails error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@class UIImage;

SWIFT_CLASS_NAMED("ImageData")
@interface BNHImageData : NSObject
@property (nonatomic, readonly, strong) UIImage * _Nonnull image;
@property (nonatomic, readonly) CGRect roi;
@property (nonatomic, readonly) NSInteger imageValidity;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHImageFormatMode, "ImageFormatMode", open) {
  BNHImageFormatModeStandardQuality = 0,
  BNHImageFormatModeHighQuality = 1,
};


SWIFT_PROTOCOL_NAMED("ImageListener")
@protocol BNHImageListener
- (void)onImageWithImageData:(BNHImageData * _Nonnull)imageData;
@end


SWIFT_CLASS_NAMED("ImageValidity")
@interface BNHImageValidity : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger valid;)
+ (NSInteger)valid SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger invalidDeviceOrientation;)
+ (NSInteger)invalidDeviceOrientation SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger invalidRoi;)
+ (NSInteger)invalidRoi SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger tiltedHead;)
+ (NSInteger)tiltedHead SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger faceTooFar;)
+ (NSInteger)faceTooFar SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger unevenLight;)
+ (NSInteger)unevenLight SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("LicenseActivationInfo")
@interface BNHLicenseActivationInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull activationID;
- (nonnull instancetype)initWithActivationID:(NSString * _Nonnull)activationID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("LicenseDetails")
@interface BNHLicenseDetails : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull licenseKey;
@property (nonatomic, readonly, copy) NSString * _Nullable productId;
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey productId:(NSString * _Nullable)productId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BNHLicenseOfflineMeasurements;

SWIFT_CLASS_NAMED("LicenseInfo")
@interface BNHLicenseInfo : NSObject
@property (nonatomic, readonly, strong) BNHLicenseActivationInfo * _Nonnull licenseActivationInfo;
@property (nonatomic, readonly, strong) BNHLicenseOfflineMeasurements * _Nullable licenseOfflineMeasurements;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("LicenseMessage")
@interface BNHLicenseMessage : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger error;)
+ (NSInteger)error SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger warning;)
+ (NSInteger)warning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger dataUpdate;)
+ (NSInteger)dataUpdate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger reset;)
+ (NSInteger)reset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithType:(NSInteger)type value:(id _Nullable)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHLicenseMessage (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("LicenseOfflineMeasurements")
@interface BNHLicenseOfflineMeasurements : NSObject
@property (nonatomic, readonly) int64_t totalMeasurements;
@property (nonatomic, readonly) int64_t remainingMeasurements;
@property (nonatomic, readonly) int64_t measurementEndTimestamp;
- (nonnull instancetype)initWithTotalMeasurements:(int64_t)totalMeasurements remainingMeasurements:(int64_t)remainingMeasurements measurementEndTimestamp:(int64_t)measurementEndTimestamp OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("LicenseTokenData")
@interface BNHLicenseTokenData : NSObject
- (nonnull instancetype)initWithActivationID:(NSString * _Nonnull)activationID enabledVitalSigns:(BNHVitalSignType)enabledVitalSigns totalOfflineMeasurements:(int64_t)totalOfflineMeasurements remainingOfflineMeasurements:(int64_t)remainingOfflineMeasurements offlineMeasurementEndTimestamp:(int64_t)offlineMeasurementEndTimestamp OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHMeasurementMode, "MeasurementMode", open) {
  BNHMeasurementModeFace = 0,
  BNHMeasurementModeFinger = 1,
};

typedef SWIFT_ENUM_NAMED(NSInteger, BNHPnsZone, "PNSZone", open) {
  BNHPnsZoneUnknown = 0,
  BNHPnsZoneLow = 1,
  BNHPnsZoneNormal = 2,
  BNHPnsZoneHigh = 3,
};


SWIFT_CLASS_NAMED("RRI")
@interface BNHRRI : NSObject
@property (nonatomic, readonly) double timestamp;
@property (nonatomic, readonly) NSInteger interval;
- (nonnull instancetype)initWithTimestamp:(double)timestamp interval:(double)interval OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHSnsZone, "SNSZone", open) {
  BNHSnsZoneUnknown = 0,
  BNHSnsZoneLow = 1,
  BNHSnsZoneNormal = 2,
  BNHSnsZoneHigh = 3,
};

enum BNHSessionState : NSInteger;

SWIFT_PROTOCOL_NAMED("Session")
@protocol BNHSession
- (BOOL)startWithMeasurementDuration:(uint64_t)measurementDuration error:(NSError * _Nullable * _Nullable)error;
- (BOOL)stopAndReturnError:(NSError * _Nullable * _Nullable)error;
- (void)terminate;
@property (nonatomic, readonly) enum BNHSessionState state;
@end



SWIFT_CLASS_NAMED("SessionEnabledVitalSigns")
@interface BNHSessionEnabledVitalSigns : NSObject
@property (nonatomic, readonly, strong) BNHEnabledVitalSigns * _Nonnull deviceEnabled;
@property (nonatomic, readonly, strong) BNHEnabledVitalSigns * _Nonnull measurementModeEnabled;
@property (nonatomic, readonly, strong) BNHEnabledVitalSigns * _Nonnull licenseEnabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDeviceEnabled:(BNHEnabledVitalSigns * _Nonnull)deviceEnabled measurementModeEnabled:(BNHEnabledVitalSigns * _Nonnull)measurementModeEnabled licenseEnabled:(BNHEnabledVitalSigns * _Nonnull)licenseEnabled OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEnabledWithVitalSignType:(BNHVitalSignType)vitalSignType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isDeviceEnabledWithVitalSignType:(BNHVitalSignType)vitalSignType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isMeasurementModeEnabledWithVitalSignType:(BNHVitalSignType)vitalSignType SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isLicenseEnabledWithVitalSignType:(BNHVitalSignType)vitalSignType SWIFT_WARN_UNUSED_RESULT;
@end

@class BNHWarningData;

SWIFT_PROTOCOL_NAMED("SessionInfoListener")
@protocol BNHSessionInfoListener
- (void)onSessionStateChangeWithSessionState:(enum BNHSessionState)sessionState;
- (void)onWarningWithWarningData:(BNHWarningData * _Nonnull)warningData;
- (void)onErrorWithErrorData:(BNHErrorData * _Nonnull)errorData;
- (void)onLicenseInfoWithLicenseInfo:(BNHLicenseInfo * _Nonnull)licenseInfo;
- (void)onEnabledVitalSignsWithEnabledVitalSigns:(BNHSessionEnabledVitalSigns * _Nonnull)enabledVitalSigns;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHSessionState, "SessionState", open) {
  BNHSessionStateInitializing = 0,
  BNHSessionStateReady = 1,
  BNHSessionStateStarting = 2,
  BNHSessionStateProcessing = 3,
  BNHSessionStateStopping = 4,
  BNHSessionStateTerminating = 5,
  BNHSessionStateTerminated = 6,
};

typedef SWIFT_ENUM_NAMED(NSInteger, BNHSex, "Sex", open) {
  BNHSexUnspecified = 0,
  BNHSexMale = 1,
  BNHSexFemale = 2,
};

typedef SWIFT_ENUM_NAMED(NSInteger, BNHStressLevel, "StressLevel", open) {
  BNHStressLevelUnknown = 0,
  BNHStressLevelLow = 1,
  BNHStressLevelNormal = 2,
  BNHStressLevelMild = 3,
  BNHStressLevelHigh = 4,
  BNHStressLevelExtreme = 5,
};

@class NSNumber;

SWIFT_CLASS_NAMED("SubjectDemographic")
@interface BNHSubjectDemographic : NSObject
@property (nonatomic, readonly) enum BNHSex sex;
@property (nonatomic, readonly, strong) NSNumber * _Nullable age;
@property (nonatomic, readonly, strong) NSNumber * _Nullable weight;
- (nonnull instancetype)initWithSex:(enum BNHSex)sex age:(NSNumber * _Nullable)age weight:(NSNumber * _Nullable)weight OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("VitalSign")
@protocol BNHVitalSign
@property (nonatomic, readonly) BNHVitalSignType type;
@end


SWIFT_CLASS_NAMED("VitalSignBloodPressure")
@interface BNHVitalSignBloodPressure : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly, strong) BNHBloodPressure * _Nonnull value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignBloodPressure (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignConfidence")
@interface BNHVitalSignConfidence : NSObject
@property (nonatomic, readonly) enum BNHConfidenceLevel level;
- (nonnull instancetype)initWithLevel:(enum BNHConfidenceLevel)level OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("VitalSignDouble")
@interface BNHVitalSignDouble : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly) double value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignDouble (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignHemoglobin")
@interface BNHVitalSignHemoglobin : BNHVitalSignDouble
@end


SWIFT_CLASS_NAMED("VitalSignHemoglobinA1C")
@interface BNHVitalSignHemoglobinA1C : BNHVitalSignDouble
@end


SWIFT_CLASS_NAMED("VitalSignInt")
@interface BNHVitalSignInt : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly) NSInteger value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignInt (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignLFHF")
@interface BNHVitalSignLFHF : BNHVitalSignDouble
@end


SWIFT_CLASS_NAMED("VitalSignMeanRRI")
@interface BNHVitalSignMeanRRI : BNHVitalSignInt
@property (nonatomic, readonly, strong) BNHVitalSignConfidence * _Nullable confidence;
@end


SWIFT_CLASS_NAMED("VitalSignOxygenSaturation")
@interface BNHVitalSignOxygenSaturation : BNHVitalSignInt
@end


SWIFT_CLASS_NAMED("VitalSignPNSIndex")
@interface BNHVitalSignPNSIndex : BNHVitalSignDouble
@end


SWIFT_CLASS_NAMED("VitalSignPNSZone")
@interface BNHVitalSignPNSZone : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly) enum BNHPnsZone value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignPNSZone (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignPRQ")
@interface BNHVitalSignPRQ : BNHVitalSignDouble
@property (nonatomic, readonly, strong) BNHVitalSignConfidence * _Nullable confidence;
@end


SWIFT_CLASS_NAMED("VitalSignPulseRate")
@interface BNHVitalSignPulseRate : BNHVitalSignInt
@property (nonatomic, readonly, strong) BNHVitalSignConfidence * _Nullable confidence;
@end


SWIFT_CLASS_NAMED("VitalSignRMSSD")
@interface BNHVitalSignRMSSD : BNHVitalSignInt
@end


SWIFT_CLASS_NAMED("VitalSignRRI")
@interface BNHVitalSignRRI : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly, copy) NSArray<BNHRRI *> * _Nonnull value;
@property (nonatomic, readonly, strong) BNHVitalSignConfidence * _Nullable confidence;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignRRI (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignRespirationRate")
@interface BNHVitalSignRespirationRate : BNHVitalSignInt
@property (nonatomic, readonly, strong) BNHVitalSignConfidence * _Nullable confidence;
@end


SWIFT_CLASS_NAMED("VitalSignSD1")
@interface BNHVitalSignSD1 : BNHVitalSignInt
@end


SWIFT_CLASS_NAMED("VitalSignSD2")
@interface BNHVitalSignSD2 : BNHVitalSignInt
@end


SWIFT_CLASS_NAMED("VitalSignSDNN")
@interface BNHVitalSignSDNN : BNHVitalSignInt
@property (nonatomic, readonly, strong) BNHVitalSignConfidence * _Nullable confidence;
@end


SWIFT_CLASS_NAMED("VitalSignSNSIndex")
@interface BNHVitalSignSNSIndex : BNHVitalSignDouble
@end


SWIFT_CLASS_NAMED("VitalSignSNSZone")
@interface BNHVitalSignSNSZone : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly) enum BNHSnsZone value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignSNSZone (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignStressIndex")
@interface BNHVitalSignStressIndex : BNHVitalSignInt
@end


SWIFT_CLASS_NAMED("VitalSignStressLevel")
@interface BNHVitalSignStressLevel : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly) enum BNHStressLevel value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignStressLevel (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end


SWIFT_CLASS_NAMED("VitalSignTypes")
@interface BNHVitalSignTypes : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType none;)
+ (BNHVitalSignType)none SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType pulseRate;)
+ (BNHVitalSignType)pulseRate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType respirationRate;)
+ (BNHVitalSignType)respirationRate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType oxygenSaturation;)
+ (BNHVitalSignType)oxygenSaturation SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType stressLevel;)
+ (BNHVitalSignType)stressLevel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType stressIndex;)
+ (BNHVitalSignType)stressIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType sdnn;)
+ (BNHVitalSignType)sdnn SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType bloodPressure;)
+ (BNHVitalSignType)bloodPressure SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType rri;)
+ (BNHVitalSignType)rri SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType meanRri;)
+ (BNHVitalSignType)meanRri SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType rmssd;)
+ (BNHVitalSignType)rmssd SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType sd1;)
+ (BNHVitalSignType)sd1 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType sd2;)
+ (BNHVitalSignType)sd2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType prq;)
+ (BNHVitalSignType)prq SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType pnsIndex;)
+ (BNHVitalSignType)pnsIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType pnsZone;)
+ (BNHVitalSignType)pnsZone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType snsIndex;)
+ (BNHVitalSignType)snsIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType snsZone;)
+ (BNHVitalSignType)snsZone SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType wellnessIndex;)
+ (BNHVitalSignType)wellnessIndex SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType wellnessLevel;)
+ (BNHVitalSignType)wellnessLevel SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType lfhf;)
+ (BNHVitalSignType)lfhf SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType hemoglobin;)
+ (BNHVitalSignType)hemoglobin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BNHVitalSignType hemoglobinA1C;)
+ (BNHVitalSignType)hemoglobinA1C SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull all;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("VitalSignWellnessIndex")
@interface BNHVitalSignWellnessIndex : BNHVitalSignInt
@end

enum BNHWellnessLevel : NSInteger;

SWIFT_CLASS_NAMED("VitalSignWellnessLevel")
@interface BNHVitalSignWellnessLevel : NSObject <BNHVitalSign>
@property (nonatomic, readonly) BNHVitalSignType type;
@property (nonatomic, readonly) enum BNHWellnessLevel value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BNHVitalSignWellnessLevel (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull bnhDescription;
@end

@class BNHVitalSignsResults;

SWIFT_PROTOCOL_NAMED("VitalSignsListener")
@protocol BNHVitalSignsListener
- (void)onVitalSignWithVitalSign:(id <BNHVitalSign> _Nonnull)vitalSign;
- (void)onFinalResultsWithResults:(BNHVitalSignsResults * _Nonnull)results;
@end


SWIFT_CLASS_NAMED("VitalSignsResults")
@interface BNHVitalSignsResults : NSObject
- (NSArray<id <BNHVitalSign>> * _Nonnull)getResults SWIFT_WARN_UNUSED_RESULT;
- (id <BNHVitalSign> _Nullable)getResultOf:(BNHVitalSignType)vitalSignType SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSNumber *> * _Nonnull)getVitalSignTypes SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BNHVitalSignsResults (SWIFT_EXTENSION(BinahAI))
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS_NAMED("WarningData")
@interface BNHWarningData : NSObject <BNHAlertData>
@property (nonatomic, copy) NSString * _Nonnull domain;
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull additionalInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BNHWellnessLevel, "WellnessLevel", open) {
  BNHWellnessLevelUnknown = 0,
  BNHWellnessLevelLow = 1,
  BNHWellnessLevelMedium = 2,
  BNHWellnessLevelHigh = 3,
};

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
